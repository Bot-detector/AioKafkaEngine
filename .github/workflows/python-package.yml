# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: ["develop"]
  pull_request:
    branches: ["develop"]

jobs:
  build:
    runs-on: [self-hosted, "hetzner"]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: Start Kafka with Docker Compose
        run: docker-compose -f docker-compose.yml up -d

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest-asyncio
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: |
          pytest
  
  deploy:
    depends_on: build
    runs-on: [self-hosted, "hetzner"]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        run: |
          python -m pip install --upgrade build

      - name: Build package
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        run: python -m build

      - name: Publish package
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        uses: pypa/gh-action-pypi-publish@v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}